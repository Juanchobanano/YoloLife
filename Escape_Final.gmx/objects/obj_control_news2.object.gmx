<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// If scroll = true, the user is touching the screen and we are moving the view accordingly
scroll = false;
// prevx stores the touch location from the previous step
prevx = 0;
// momentum keeps track of the speed for momentum after user removes his or her finger
momentum = 0;
// scrolldir is the direction we are scrolling
// 0 = left
// 1 = right
scrolldir = 0;
// usemomentum determines whether or not we use momentum
usemomentum = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scroll)
{
    // We are scrolling
    // Check to see if the user's finger is still on the screen
    if (device_mouse_check_button(0, mb_left))
    {
        // Screen is being touched, we need to scroll
        // Calculate the new location of the touch
        var newx; newx = view_xview[0] - (device_mouse_raw_x(0) - prevx);
        // Set the momentum and scroll direction if momentum is used 
        if (usemomentum)
        {
            // Set the momentum
            // The faster the user was moving his or her finger, the more momentum
            momentum = abs(round((device_mouse_raw_x(0) - prevx) /2));
            if (device_mouse_raw_x(0) - prevx &gt; 0) { scrolldir = 0; } // We are scrolling left
            else { scrolldir = 1; } // We are scrolling right
        }
        // Keep the new location within the dimensions of the room
        if (newx &lt; 0) { newx = 0; }
        if (newx + view_wview[0] &gt; room_width) { newx = room_width - view_wview[0]; }
        // Set the new location of the view
        view_xview[0] = newx;
        // Store the current touch location to be used for comparison on the next step
        prevx = device_mouse_raw_x(0);          
    }
    // Check to see if the uesr removed his or her finger from the screen
    if (device_mouse_check_button_released(0, mb_left))
    {
        // User has removed his or her finger
        prevx = 0; scroll = false;
    }
}
else
{
    // Check to see if the user initiated a touch
    if (device_mouse_check_button_pressed(0, mb_left))
    {
        // User just touched the screen, we are beginning about to scroll
        // Record the current location of the touch to compare on the next step
        scroll = true; prevx = device_mouse_raw_x(0);
    }
    // Check to see if momentum is enabled and there is some remaining
    if (usemomentum &amp;&amp; momentum &gt; 0)
    {
        // There is some momentum.  We need to scroll a bit more
        var newx;
        if (scrolldir == 0)
        {
            // We are scrolling left
            newx = view_xview[0] - momentum;
            // Don't scroll beyond the room's dimensions
            if (newx &lt;= 0) { newx = 0; momentum = 0; }
        }
        else
        {
            // We are scrolling right
            newx = view_xview[0] + momentum;
            // Don't scroll beyond the room's dimensions
            if (newx + view_wview[0] &gt;= room_width) { newx = room_width - view_wview[0]; momentum = 0; }
        }
        // Set the new view location
        view_xview[0] = newx;
        // Decrement momentun if &gt; 0
        if (momentum &gt; 0) { momentum -= 1; }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
