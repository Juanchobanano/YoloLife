<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barra</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>comenzar = 0;
parar = 0;
desaparecer = 0;
image_speed = 0;
image_index = 0;
once = 0;
barra_back = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(parar == 2){
    parar = 3;
    if(!barra_back){
        if(!comenzar){
            with(obj_control_adventure){instance_destroy();}
            instance_destroy();
        }else{
            room_restart();
            mouse_clear(mb_left); 
        }
    }else{
        src_trans(Room_Adventure);
    }
    image_index = 0;
    image_speed = 0;
    audio_play_sound(sn_boton,1,0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(parar &lt; 2){
    parar++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(!barra_back){
    if(!comenzar){
        if(idioma == "en"){
            if(image_index == 0){
                draw_sprite(spr_start,0,x + sprite_width - 28 - sprite_get_width(spr_start), y + 8);
            }else{
                draw_sprite(spr_star,1,x + sprite_width - 28 - sprite_get_width(spr_start), y + 8);
            }
        }else if(idioma == "es"){
            if(image_index == 0){
                draw_sprite(spr_comenzar,0,x + sprite_width - 28 - sprite_get_width(spr_comenzar), y + 8);
            }else{
                draw_sprite(spr_comenzar,1,x + sprite_width - 28 - sprite_get_width(spr_comenzar), y + 8);
            }
        }
    }else{
        if(idioma == "en"){
            if(image_index == 0){
                draw_sprite(spr_restart,0,x + sprite_width - 28 - sprite_get_width(spr_restart), y + 8);
            }else{
                draw_sprite(spr_restart,1,x + sprite_width - 28 - sprite_get_width(spr_restart), y + 8);
            }
        }else if(idioma == "es"){
            if(image_index == 0){
                draw_sprite(spr_reiniciar,0,x + sprite_width - 28 - sprite_get_width(spr_reiniciar), y + 8);
            }else{
                draw_sprite(spr_reiniciar,1,x + sprite_width - 28 - sprite_get_width(spr_reiniciar), y + 8);
            }
        }
    }
}else{
    if(idioma == "en"){
        if(image_index == 0){
            draw_sprite(spr_back,0,x + sprite_width - 28 - sprite_get_width(spr_back), y + 8);
        }else{
            draw_sprite(spr_back,1,x + sprite_width - 28 - sprite_get_width(spr_back), y + 8);
        }
    }else if(idioma == "es"){
        if(image_index == 0){
            draw_sprite(spr_atras,0,x + sprite_width - 28 - sprite_get_width(spr_atras), y + 8);
        }else{
            draw_sprite(spr_atras,1,x + sprite_width - 28 - sprite_get_width(spr_atras), y + 8);
        }
    }
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
