<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_personaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-102</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar grav, hsp, vsp, jumpspeed, movespeed;
once = 0;
monedas_locales = 0;

// AdBuddiz.
if((Rooms mod 10) == 0){
    AdBuddiz_ShowAd();
}

// Admob.
/*if((Rooms mod 24) == 0){
    GoogleMobileAds_ShowInterstitial();
    GoogleMobileAds_Init(global.INTER_ID);
    GoogleMobileAds_LoadInterstitial();
}*/

if((Rooms mod 12) == 0){
    GoogleMobileAds_ShowInterstitial();
    GoogleMobileAds_Init(global.INTER_ID);
    GoogleMobileAds_LoadInterstitial();
}

//Create buttons.
if(room!=game_final){
    instance_create(800-160-30,343,obj_jump);
    instance_create(0,324,obj_left);
    instance_create(116+1,324,obj_right);
}

//Extra.
image_index = 0;
image_speed = 0;
background_hspeed[0] = -2;
contador_salto = 0;

//Keys
key_right = 0;
key_left = 0;
key_jump = 0;

//Initialize Values.
grav = .5;
hsp = 0;
vsp = 0;
jumpspeed = 8;
movespeed = 5;
move = 0;

// Colisiones bug.
bug1 = 0;
bug2 = 0;
signo1 = 0;
signo2 = 0;

//Previous position.
pre_x = x;
pre_y = y;


// Games.
if(room==game36){
    with(obj_control_game) alarm[1] = 1;
    instance_create(irandom_range(0,800-26),480,obj_lucky);
}else if(room==game43){
    alarm[0] = 1;
}

// Background Movement.
background_x[0] = bk_x;
background_y[0] = bk_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = irandom_range(50,70);
p = instance_create(irandom_range(view_xview[0], view_xview[0] + 800), room_height, obj_BuiltIn_Firework);
p = instance_create(irandom_range(view_xview[0], view_xview[0] + 800), room_height, obj_BuiltIn_Firework);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Alarm creadora de Runs.
alarm[0] = irandom_range(5,10);
instance_create(irandom_range(0,800-32),irandom_range(-40,-50),obj_run);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    &lt; COMENTARIOS &gt;
    * El personaje mide 25x25
*/
if(res){
    if(x &lt; -sprite_width){
        x = room_width;
    }else if(x &gt; room_width){
        x = -sprite_width;
    }else if(y &lt; -sprite_height){
        y = room_height;
    }else if(y &gt; room_height){
        y = -sprite_height;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room!=game_final){
    move = key_right + key_left;
    hsp = move * movespeed;
}else{
    hsp = 0;
}

if(key_jump == 1){
    if(!invertir){ // Salta para arriba.
        if(room != game_final){
            vsp = key_jump * -jumpspeed;
        }
    }else{ // Salta para abajo.
        vsp = key_jump * jumpspeed;
    }
}else{
    if(vsp &lt; 10 and !invertir){ // Gravedad hacia abajo.
        vsp += grav;    
    }else if(invertir and vsp &gt; -10){ // Gravedad hacia arriba.
        vsp -= grav;
    }
}

//Horizontal Collision.
if (place_meeting(x+hsp, y, obj_wall)){
    while(!place_meeting(x+sign(hsp), y, obj_wall) and bug1 &lt;= 10){
        signo1 = sign(hsp);
        x += sign(hsp); bug1++;
    }
    hsp = 0;
}else{
    bug1 = 0;
}

//Vertical Collision.
if (place_meeting(x, y+vsp, obj_wall)){
    while(!place_meeting(x, y+sign(vsp), obj_wall) and bug2 &lt;= 10){
        signo2 = sign(vsp);
        y += sign(vsp); bug2++;  
    }
    vsp = 0;    
   // show_debug_message('vertical ' + string(signo2));
}else{
    bug2 = 0;
}

hspeed = hsp;
vspeed = vsp;

// Final Level Version 1.0.0 -- &gt; game73
if(room==gamex1){
    if(distance_to_object(obj_win) &lt; (5*25)){
        if(!instance_exists(obj_gravedad)){
            instance_create(730,417,obj_gravedad);
            vsp -= 20;
        }
    }
}

// Modo Retador.
if(reto and iniciar){
    tiempo += 1/room_speed; // Tiempo.
}else{
    tiempo = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pipe">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_ducky">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_centro">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_win">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room!=gamex1){
   // monedas += monedas_room;
   /* if(file_exists(working_directory + "Monedas.sav")){
        file_delete(working_directory + "Monedas.sav");
    }
    ini_open(working_directory + "Monedas.sav");
    ini_write_real("Monedas","pass",monedas);
    ini_close();*/
    if(!reto){
        Rooms++;
        room_goto_next();
        audio_play_sound(sn_win,1,0);
        // Guardar Monedas.
        monedas += monedas_locales;
        if(file_exists(working_directory + "monedas.sav")){
            file_delete(working_directory + "monedas.sav");
        }
        ini_open(working_directory + "Monedas.sav");
        ini_write_real("Monedas","pass",monedas);
        ini_close();
    }else{ // Challenge Mode.
        // Complete!
        if(!once){
            audio_play_sound(sn_win,1,0);
            if(!file_exists(working_directory + "tiempo.sav")){
                Score_tiempo = tiempo; 
            }else{
                show_debug_message('false');
                if(tiempo &lt; Score_tiempo){
                    Score_tiempo = tiempo;
                    instance_create(view_xview[0] + (room_width/2)/2 + 60, 300, obj_new);
                    instance_create(view_xview[0] + (room_width/2)/2 - 105, 300, obj_new);
                }
            }
            tiempo = 0;
            if(file_exists(working_directory + 'tiempo.sav')){
                file_delete(working_directory + 'tiempo.sav');
            }
            ini_open(working_directory + 'tiempo.sav');
            ini_write_real("tiempo","pass",Score_tiempo); 
            ini_close();
            if(!instance_exists(obj_control_challenge)){
                ch = instance_create(0,0,obj_control_challenge);
            }
            with(ch){ comenzar = 1;}
            new = 0;
            alarm[1] = 1; 
            iniciar = 0;
            // Monedas.
            monedas += monedas_locales;
            if(file_exists(working_directory + "monedas.sav")){
                file_delete(working_directory + "monedas.sav");
            }
            ini_open(working_directory + "Monedas.sav");
            ini_write_real("Monedas","pass",monedas);
            ini_close();
            once = 1;
        }
    }
}else{
    final = 1;
    // Guardar este valor.
    if(Best_Muertes == 0){
        Best_Muertes = Muertes;
    }else{
        if(Muertes &lt; Best_Muertes){
            Best_Muertes = Muertes;
        }
    }
    GoogleAnalytics_SendEvent("Game Completed",final);
    background_y[0] = 0;
    src_trans(game_final);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>src_muerte();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_portal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tel = instance_furthest(obj_per.x,obj_per.y,obj_portal);
if(place_free(tel.x + sprite_width + 1,tel.y)){
    obj_per.x = tel.x + sprite_width + 1;
}else if(place_free(tel.x - sprite_width - 1,tel.y)){
    obj_per.x = tel.x - sprite_width - 1;
}
obj_per.y = tel.y
audio_play_sound(sn_teleport,1,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_moneda">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Coins Collision.
if(!other.pickup){
    audio_play_sound(sn_coin,1,0);
    monedas_locales++;
    //monedas++;
}
with other{
    pickup = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*self.x = mouse_x;
self.y = mouse_y;
pre_x = mouse_x;
pre_y = mouse_y;
*/
//show_debug_message('x ' + string(mouse_x) + ' y ' + string(mouse_y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//monedas_room = 0;
if(room==game36){
    with(obj_control_game) alarm[1] = -1;
}
// Game Runs. (Nivel 45);
alarm[0] = -1;
bk_x = background_x[0];
bk_y = background_y[0];
if(invertir){
    invertir = 0;
}
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!reto){
    SavedRoom = room;
    if(file_exists(working_directory + "Datos.sav")){
        file_delete(working_directory + "Datos.sav");
    }
    ini_open(working_directory + "Datos.sav");
    ini_write_real("Room","pass",Rooms);
    ini_write_real("SavedRoom","pass",SavedRoom);
    ini_write_real("Muertes","pass",Muertes);
    ini_write_real("final","pass",final);
    ini_write_real("BestMuertes","pass",Best_Muertes);
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(os_type == os_windows){
    if(room==game1){
        draw_set_halign(fa_center);
        draw_set_font(font_mensaje);
        draw_set_color(c_white);
        if(idioma=="en"){
        draw_text(room_width/2,100,"You can either jump#with the key UP or with SPACE");
        }else if(idioma=="es"){
        draw_text(room_width/2,100,"Puedes saltar con#la tecla UP o con SPACE");
        }
    }
}

draw_set_halign(noone);
draw_set_font(font_mensaje);
draw_set_colour(c_black); 
valor = monedas + monedas_locales;
if(!reto and room!=game1c and room!=gamex1){
    draw_text(15,15,string(Rooms));
    draw_text(15,45,string(Muertes));
    draw_sprite(spr_moneda,0,room_width - 25,15); // 23 moneda width.
    draw_set_color(c_yellow);
    draw_text(room_width - string_width(string(valor)) - 25 - 5,15, string(valor));
    // Tiempo Jugado.
   /* tiempo_juego += (1/30);
    if(tiempo_juego &lt; 60){  // Segundos.
        draw_text(
        room_width - string_width(string(tiempo_juego)),
        room_height - string_height(string(tiempo_juego)),
        string(tiempo_juego) + 's'
        );
    }else if(tiempo_juego &gt;= power(60,1)){ // Minutos.
        draw_text(
        room_width - string_width(string(tiempo_juego)),
        room_height - string_height(string(tiempo_juego)),
        string(tiempo_juego/power(60,1)) + 'm'
        )
    }else if(tiempo &gt;= power(60,2)){
        draw_text(
        room_width - string_width(string(tiempo_juego)),
        room_height - string_height(string(tiempo_juego)),
        string(tiempo_juego/power(60,2)) + 'm'
        )
    } */
}else if(reto and iniciar){
    if(idioma == "en"){
        draw_text(view_xview + 15,15,'TIME');
    }else if(idioma == "es"){
        draw_text(view_xview + 15,15,'TIEMPO');
    }
    draw_text(view_xview + 15,45,string(tiempo)+'s');
    draw_set_color(c_yellow);
    draw_sprite(spr_moneda,0,view_xview[0] + view_wview[0] - 25,15); // 23 moneda width.
    draw_text(view_xview[0] + view_wview[0] - string_width(string(valor)) - 25 - 5,15, string(valor));
}
/*show_debug_message('reto: ' + string(reto));
show_debug_message('iniciar:  ' + string(iniciar));

//cantidad = string_length(string(Muertes));

/* Monedas */
/*draw_set_colour(make_colour_rgb(255,254,38));
draw_sprite(spr_moneda,0,30,62);
draw_text(65,50,string(monedas + monedas_room));*/

//draw_set_colour(make_colour_rgb(255,254,38));
//draw_sprite(spr_moneda,0,30,62);

/* Muertes*/
/*draw_set_colour(make_colour_rgb(255,38,38)); // Red
if(cantidad==1){
    draw_sprite(spr_enemy,0,680,23);
    draw_text(710, 10, string(Muertes));
}else{
    draw_sprite(spr_enemy,0,680 - cantidad*15, 23);
    draw_text(710 - cantidad * 15, 10, string(Muertes));
}*/

//draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
